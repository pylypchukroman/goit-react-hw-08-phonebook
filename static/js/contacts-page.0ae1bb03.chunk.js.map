{"version":3,"file":"static/js/contacts-page.0ae1bb03.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.js","redux/contacts/contactsOperations.js","components/Filter/Filter.module.css","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/views/ContactsView/ContactcsView.module.css?fd5a","views/ContactsView/ContactsView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"add_button\":\"ContactForm_add_button__HoPGx\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phonebook.loading;\n\nconst getFilter = state => state.phonebook.filter;\n\nconst getAllContacts = state => state.phonebook.contacts;\n\nconst getCurrentContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizeFilterRequest = filter.toLowerCase();\n\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilterRequest)\n    );\n  }\n);\n\nconst phonebookSelectors = {\n  getLoading,\n  getFilter,\n  getCurrentContacts,\n  getAllContacts,\n};\n\nexport default phonebookSelectors;\n","import { useState, useCallback } from 'react';\nimport styles from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport phonebookSelectors from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const currentContacts = useSelector(phonebookSelectors.getAllContacts);\n  const onSubmit = useCallback(\n    (name, number) => dispatch(addContact(name, number)),\n    [dispatch]\n  );\n\n  const handleChange = useCallback(e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(`Field with name -  ${name} not found`);\n    }\n  }, []);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      currentContacts.some(\n        contact => name.toLowerCase() === contact.name.toLowerCase()\n      )\n        ? alert(`${name} is already in contacts.`)\n        : onSubmit(name, number);\n\n      setName('');\n      setNumber('');\n    },\n    [currentContacts, name, number, onSubmit]\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.FormContainer}>\n      <Form.Group size=\"sm\" className=\"mb-3\">\n        <Form.Control\n          type=\"text\"\n          className={styles.input_value}\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Form.Group>\n      <Form.Group size=\"sm\" className=\"mb-3\">\n        <Form.Control\n          className={styles.input_value}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Form.Group>\n      <button type=\"submit\" className={styles.add_button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contactsActions.js';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error.message)));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input_value\":\"Filter_input_value__NUZbB\"};","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport Form from 'react-bootstrap/Form';\nimport phonebookSelectors from 'redux/contacts/contactsSelectors';\nimport { changeFilter } from 'redux/contacts/contactsActions';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const value = useSelector(phonebookSelectors.getFilter);\n  const onChange = useCallback(\n    e => dispatch(changeFilter(e.target.value)),\n    [dispatch]\n  );\n\n  return (\n    <Form.Group size=\"sm\" className=\"mb-3\">\n      <Form.Control\n        placeholder=\"Find contacts by name\"\n        className={styles.input_value}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </Form.Group>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_list_item\":\"ContactList_contact_list_item__Ts0bB\",\"contact_list\":\"ContactList_contact_list__tnyRS\",\"contact_list_contact\":\"ContactList_contact_list_contact__zeg2G\",\"delete_btn\":\"ContactList_delete_btn__nRLrj\"};","import styles from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport phonebookSelectors from 'redux/contacts/contactsSelectors';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(phonebookSelectors.getCurrentContacts);\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={styles.contact_list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.contact_list_item} key={id}>\n          <p className={styles.contact_list_contact}>\n            <span className={styles.contact_list_contact_name}>{name}:</span>{' '}\n            {number}\n          </p>\n          <button\n            className={styles.delete_btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"ContactcsView_phonebook__bmB4Y\",\"contacts_view_header\":\"ContactcsView_contacts_view_header__WyN4c\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport { Audio } from 'react-loader-spinner';\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport phonebookSelectors from 'redux/contacts/contactsSelectors';\nimport styles from './ContactcsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(phonebookSelectors.getLoading);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <div className={styles.phonebook}>\n      <div className={styles.flex_item}>\n        <h2 className={styles.contacts_view_header}>Phonebook</h2>\n        <ContactForm />\n      </div>\n      <div className={styles.flex_item}>\n        <h2 className={styles.contacts_view_header}>Contacts</h2>\n        <Filter />\n        {isLoading && (\n          <Audio type=\"Grid\" color=\"#212121\" height={100} width={100} />\n        )}\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilter","state","phonebook","filter","getAllContacts","contacts","getLoading","loading","getCurrentContacts","allContacts","normalizeFilterRequest","toLowerCase","contact","includes","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","currentContacts","useSelector","phonebookSelectors","onSubmit","useCallback","addContactRequest","axios","then","data","addContactSuccess","catch","error","addContactError","message","addContact","handleChange","e","currentTarget","console","log","handleSubmit","preventDefault","some","alert","className","styles","Form","size","type","onChange","placeholder","pattern","title","required","Filter","changeFilter","target","ContactList","onDeleteContact","id","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","onClick","ContactsView","isLoading","useEffect","fetchContactRequest","fetchContactSuccess","fetchContactError","color","height","width"],"sourceRoot":""}