{"version":3,"file":"static/js/register-page.c85b5376.chunk.js","mappings":"yOACA,EAAuB,uBAAvB,EAA8D,gCAA9D,EAAsG,wB,SCKvF,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAyBF,EAAAA,EAAAA,UAAS,IAAlC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAaC,EAAAA,EAAAA,cACjB,SAAAC,GAAW,OAAIJ,GAASK,EAAAA,EAAAA,IAASD,MACjC,CAACJ,IAGGM,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACtC,OAAQd,GACN,IAAK,OACHC,EAAQa,GACR,MAEF,IAAK,QACHX,EAAQW,GACR,MAEF,IAAK,WACHT,EAAYS,GACZ,MAEF,QACEC,QAAQC,IAAR,6BAAkChB,EAAlC,iBAaN,OACE,gBAAKiB,UAAWC,EAAhB,UACE,iBAAKD,UAAU,kBAAf,WACE,eAAIA,UAAWC,EAAf,sBAEA,kBACEC,SAfa,SAAAC,GACnBA,EAAEC,iBAEFb,EAAW,CAAER,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAC1BH,EAAQ,IACRE,EAAQ,IACRE,EAAY,KAUNY,UAAWC,EACXI,aAAa,MAHf,WAKE,UAACC,EAAA,QAAD,CAAYC,KAAK,KAAKP,UAAU,OAAhC,UACG,KACD,SAACM,EAAA,UAAD,CACEE,KAAK,OACLzB,KAAK,OACLc,MAAOd,EACP0B,YAAY,kBACZC,SAAUf,QAId,UAACW,EAAA,QAAD,CAAYC,KAAK,KAAKP,UAAU,OAAhC,UACG,KACD,SAACM,EAAA,UAAD,CACEE,KAAK,QACLzB,KAAK,QACLc,MAAOZ,EACPwB,YAAY,cACZC,SAAUf,QAId,UAACW,EAAA,QAAD,CAAYC,KAAK,KAAKP,UAAU,OAAhC,UACG,KACD,SAACM,EAAA,UAAD,CACEE,KAAK,WACLzB,KAAK,WACLc,MAAOV,EACPsB,YAAY,iBACZC,SAAUf,QAId,mBAAQa,KAAK,SAAb","sources":["webpack://react-homework-template/./src/views/RegisterView/Register.module.css?e3bc","views/RegisterView/RegisterView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__KDRMm\",\"register_view\":\"Register_register_view__1vSoY\",\"title\":\"Register_title__j8QbU\"};","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport { register } from 'redux/auth/authOperations';\nimport styles from './Register.module.css';\n\nexport default function RegisterView() {\n  const [name, setName] = useState('');\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onRegister = useCallback(\n    credentials => dispatch(register(credentials)),\n    [dispatch]\n  );\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setMail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        console.log(`Field with name -  ${name} not found`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onRegister({ name, email, password });\n    setName('');\n    setMail('');\n    setPassword('');\n  };\n\n  return (\n    <div className={styles.register_view}>\n      <div className=\"form-background\">\n        <h2 className={styles.title}>Sign up</h2>\n\n        <form\n          onSubmit={handleSubmit}\n          className={styles.form}\n          autoComplete=\"off\"\n        >\n          <Form.Group size=\"sm\" className=\"mb-3\">\n            {' '}\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter your name\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group size=\"sm\" className=\"mb-3\">\n            {' '}\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group size=\"sm\" className=\"mb-3\">\n            {' '}\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Enter password\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <button type=\"submit\">Sign up</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":["RegisterView","useState","name","setName","email","setMail","password","setPassword","dispatch","useDispatch","onRegister","useCallback","credentials","register","handleChange","target","value","console","log","className","styles","onSubmit","e","preventDefault","autoComplete","Form","size","type","placeholder","onChange"],"sourceRoot":""}